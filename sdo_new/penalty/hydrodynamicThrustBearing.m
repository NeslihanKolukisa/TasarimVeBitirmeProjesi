function o = hydrodynamicThrustBearing(x)

    Q = x(1);
    R = x(2);
    R0 = x(3);
    U = x(4);
    N = 750;
    n = -3.55;
    C = 0.5;
    C1 = 10.04;
    P = (log10( log10(8.122 * 10^6 * U + 0.8) ) - C1) / n;
    XT = 2*(10^p - 560);
    EF = 9336 * Q * 0.0307 * C * XT;
    h = ((2*pi*N) / 60 )^2 * ((2*pi*U)/ EF);
    P0 = ( (6*U*Q) / (pi*h^3)) * log(R/R0);
    W = ( (pi*P0) / 2 ) * ( (R^2 - R0^2) / (log(R/R0)) );

    c1 = (W - 101000) * -1;
    c2 = (1000 - P0) * -1;
    c3 = (50 - XT) * -1;
    c4 = (h - 0.001) * -1;
    c5 = (R - R0) * -1;
    c6 = (0.001 - ((0.0307)/(386.4*P0))*((Q)/(2*pi*R*h))) * -1;
    c7 = (5000 - ((W)/(pi*(R^2 - R0^2)))) * -1;

    p = get_penalty([c1, c2, c3, c4, c5, c6, c7]);
    
    
end